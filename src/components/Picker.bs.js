// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE

import * as Cn from "re-classnames/src/Cn.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as TestUtils from "../utils/TestUtils.bs.js";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";

function Picker(Props) {
  var options = Props.options;
  var match = Props.valueUseState;
  var match$1 = match !== undefined ? match : React.useState((function () {
            return Belt_Option.getWithDefault(Belt_Array.get(options, 0), "Not provided...");
          }));
  var match$2 = Props.value;
  var value = match$2 !== undefined ? match$2 : match$1[0];
  var match$3 = Props.onChange;
  var onChange = match$3 !== undefined ? match$3 : match$1[1];
  var className = Props.className;
  var className$1 = Cn.make(/* :: */[
        Cn.unpack(className),
        /* [] */0
      ]);
  var select = TestUtils.withTestID("picker-select-test-id", React.createElement("select", {
            value: value,
            onChange: (function ($$event) {
                return Curry._1(onChange, $$event.target.value);
              })
          }, Belt_Array.map(options, (function (option) {
                  return React.createElement("option", {
                              key: option,
                              value: option
                            }, option);
                }))));
  return React.createElement("span", {
              className: className$1
            }, React.createElement("h1", undefined, "Subreddit: " + (String(value) + "")), select);
}

var make = Picker;

var $$default = Picker;

export {
  make ,
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
